1、点击列表跳转文章详情
用a标签进行跳转 使用路由

2、设置详情页的模板引擎

3、点击a标签请求当前列表中的独立
id

4、回到路由页获取id 并查找到文件
响应给前端模板引擎

5、设置删除路由，在模板引擎页传递
参数

6、在路由模块新建一个删除模块,获取
模板传递过来的参数Id 进行删除

7、文件上传，加上提交 会有两次提交
需要更改编码格式
获取文件的上传不能用req.query和req.body
需要安装一个插件multiparty
****图片上传步骤
8、在模板引擎页面设置文件上传的路由地址
并在路由文件夹下新建一个上传文件的路由

9、因为上传的文件是以二进制提交的，所以需要
npm下载multiparty进行解码

10、在上传文件路由引入multiparty模块,按着文档
操作

11、获取到文件信息之后在public文件夹下新建一个
存储上传图片的文件夹,将文件写入那个文件夹中
搭建一个管道pipe 从读取流流向写入流

12、会报错 因为引用的xheditor需要返回一个上传文件后的
地址给xheditor，

<%= %>  不会识别标签
<%- %> 会识别HTML标签

首页路由倒叙排列设置

获取请求的_id 一定需要解构赋值不然会报错
{id} = req.query 

下午================

1、编辑页面在编辑按钮上加上一个路由指回编辑
页面write

2、拿回来的数据需要显示在write页面上

3、用input type:"hidden" 存放

4、封装组件

***
banner图
新建一个模板banner

安装session
设置一个中间件在app.js里面
每次请求都会刷新app.js 所以每次
请求都会带上cookie

在登录的接口路由 写入cookie
req.session.isLogin = true

req.session相当于就是cookie

在app.js里面写入一个拦截代码
app.get("*",function(){})
*号表示拦截所有的路由
一定需要Next（）

安装 npm install serve-favicon -S
设置小图标
